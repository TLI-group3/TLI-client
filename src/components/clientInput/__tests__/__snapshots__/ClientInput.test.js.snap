// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ClientInput matches snapshot when launching widget 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div>
        <div
          class="clientInput"
        >
          <h1>
            Insert Client ID
            s
          </h1>
          <form>
            <div>
              <textarea
                class="textInput"
                placeholder="Type the ID numbers here, separated by spaces..."
                rows="4"
              />
              <br />
              <label
                for="clientFile"
              >
                Or, upload as a .txt file:
                <input
                  class="fileUpload"
                  id="clientFile"
                  type="file"
                />
              </label>
            </div>
            <div
              class="checkboxes"
            >
              <input
                name="email"
                type="checkbox"
              />
              <label
                for="email"
              >
                Generate email markup
              </label>
              <br />
              <input
                checked=""
                name="widget"
                type="checkbox"
              />
              <label
                for="widget"
              >
                Launch targeted widgets
              </label>
            </div>
            <input
              class="submitButton"
              type="submit"
              value="GO"
            />
          </form>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div
        class="clientInput"
      >
        <h1>
          Insert Client ID
          s
        </h1>
        <form>
          <div>
            <textarea
              class="textInput"
              placeholder="Type the ID numbers here, separated by spaces..."
              rows="4"
            />
            <br />
            <label
              for="clientFile"
            >
              Or, upload as a .txt file:
              <input
                class="fileUpload"
                id="clientFile"
                type="file"
              />
            </label>
          </div>
          <div
            class="checkboxes"
          >
            <input
              name="email"
              type="checkbox"
            />
            <label
              for="email"
            >
              Generate email markup
            </label>
            <br />
            <input
              checked=""
              name="widget"
              type="checkbox"
            />
            <label
              for="widget"
            >
              Launch targeted widgets
            </label>
          </div>
          <input
            class="submitButton"
            type="submit"
            value="GO"
          />
        </form>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`ClientInput matches snapshot when not launching widget 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div>
        <div
          class="clientInput"
        >
          <h1>
            Insert Client ID
          </h1>
          <form>
            <div>
              <textarea
                class="textInput"
                placeholder="Type the ID number here"
                rows="1"
              />
              <br />
              <label
                for="clientFile"
              >
                Or, upload as a .txt file:
                <input
                  class="fileUpload"
                  id="clientFile"
                  type="file"
                />
              </label>
            </div>
            <input
              class="submitButton"
              type="submit"
              value="GO"
            />
          </form>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div
        class="clientInput"
      >
        <h1>
          Insert Client ID
        </h1>
        <form>
          <div>
            <textarea
              class="textInput"
              placeholder="Type the ID number here"
              rows="1"
            />
            <br />
            <label
              for="clientFile"
            >
              Or, upload as a .txt file:
              <input
                class="fileUpload"
                id="clientFile"
                type="file"
              />
            </label>
          </div>
          <input
            class="submitButton"
            type="submit"
            value="GO"
          />
        </form>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
